@inherits LayoutComponentBase
@inject IJSRuntime runtime
<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 d-flex">
            <MudText Class="flex-grow-1" Typo="Typo.h3" Color="Color.Primary">Learn C#</MudText>
            <h4><b>Hello, Email Address/User Name</b></h4>
            <button class="btn btn-primary" @onclick="LogoutUser">Logout</button>
            <a href="https://github.com/kevmoens/Ellabit" target="_blank"><MudText Color="Color.Primary">About</MudText></a>
        </div>

        <div class="top-row px-4 d-flex">
            <MudText class="flex-grow-1" Typo="Typo.h3" Color="Color.Primary">Learn C#</MudText>
            <button class="btn btn-primary" @onclick="LoginUser">Login</button>
            <a href="https://github.com/kevmoens/Ellabit" target="_blank"><MudText Color="Color.Primary">About</MudText></a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

@code{
    private bool _isDarkMode;
    private MudTheme _theme = new();
    protected override async void OnInitialized()
    {
        _theme.Palette.Secondary = new MudBlazor.Utilities.MudColor(238, 1, 33, 255);
        _theme.PaletteDark.Secondary = new MudBlazor.Utilities.MudColor(238, 1, 33, 255);
        IJSObjectReference? module = await runtime.InvokeAsync<IJSObjectReference>("import", "./scripts/theme.js");
        var isDarkMode = await module.InvokeAsync<bool>("isDarkTheme", new object[] { });
        _isDarkMode = isDarkMode;
        StateHasChanged();
        base.OnInitialized();
    }
    void LoginUser()
    { }
    void LogoutUser()
    { }
}
